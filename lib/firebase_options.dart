// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
//import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
// Custom Firebase options for REST API implementation
// No dependency on firebase_core package
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Custom FirebaseOptions class for REST API implementation
class FirebaseOptions {
  final String apiKey;
  final String appId;
  final String messagingSenderId;
  final String projectId;
  final String? authDomain;
  final String? storageBucket;
  final String? iosBundleId;

  const FirebaseOptions({
    required this.apiKey,
    required this.appId,
    required this.messagingSenderId,
    required this.projectId,
    this.authDomain,
    this.storageBucket,
    this.iosBundleId,
  });
}

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for android - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyBofCjmD_xqHsIqHinHUI9cjdy9-OHayYM',
    appId: '1:216094997878:web:a55a8d387870aa4e8f0e57',
    messagingSenderId: '216094997878',
    projectId: 'wizard-wizard-wizard',
    authDomain: 'wizard-wizard-wizard.firebaseapp.com',
    storageBucket: 'wizard-wizard-wizard.firebasestorage.app',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyD_V5-G7_r5Vc_eEEEoi5bCRVFvfsfY6E4',
    appId: '1:216094997878:ios:ec8f13eb564060908f0e57',
    messagingSenderId: '216094997878',
    projectId: 'wizard-wizard-wizard',
    storageBucket: 'wizard-wizard-wizard.firebasestorage.app',
    iosBundleId: 'com.example.wizardOs',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyBofCjmD_xqHsIqHinHUI9cjdy9-OHayYM',
    appId: '1:216094997878:web:51501810248bb3098f0e57',
    messagingSenderId: '216094997878',
    projectId: 'wizard-wizard-wizard',
    authDomain: 'wizard-wizard-wizard.firebaseapp.com',
    storageBucket: 'wizard-wizard-wizard.firebasestorage.app',
  );
}
